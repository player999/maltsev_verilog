module node_%MODULENAME%(
				  RST, 
				  ST,
				  CLK,
				  RD,
				  RES,
				  %IN%
				  );
   input wire          RST;
   input wire          ST;
   input wire          CLK;
   output reg          RD;
   output reg [%BW%-1:0] RES;
%IN_DEF%
   reg [3:0] 		   state;
   wire [%BW%-1:0] 	   SOUT_YES;
   wire [%BW%-1:0] 	   SOUT_NO;
   wire [%BW%-1:0] 	   pRES;
   wire [%BW%-1:0] 	   lRES; 	   
   wire 			   yRD;
   wire 			   nRD;
   wire 			   pRD;
   wire 			   lRD;
   reg 				   yST;
   reg 				   nST;
   reg  			   pST;
   reg				   st_old;


   assign lRD = nRD & yRD & pRD;
   assign lRES = pRES > 0?SOUT_YES:SOUT_NO;
   %YES_MOD% yes(RST, yST, CLK, yRD, SOUT_YES%YIN%);
   %NO_MOD% no(RST, nST, CLK, nRD, SOUT_NO%NIN%);
   %PRED_MOD% pred(RST, ST, CLK, pRD, pRES%PIN%);

   always @(posedge CLK) begin
	  if (RST == 1) begin
		 yST = 0;
		 nST = 0;
		 pST = 0;
		 state = 0;
		 RD = 1;
		 RES = 0;		
	  end
	  case (state)
		0:begin
		   RD = 1;
		   if ((st_old == 0) && (ST == 1)) state = 1;
		end
		1:begin
		   yST = 1;
		   nST = 1;
		   pST = 1;
		   RD = 0;
		   state = 2;
		end
		2:begin
		   state = 3;
		end
		3:begin
		   yST = 0;
		   nST = 0;
		   pST = 0;
		   if (lRD == 1) state = 4;		   
		end
		4:begin
		   RD = 1;
		   RES = lRES;
		   state = 5;
		end
		5:begin
		   RD = 1;
		   if ((st_old == 0) && (ST == 1)) state = 1;
		end
	  endcase // case (state)
	  st_old = ST;
   end // always @ (posedge CLK)
endmodule // modulename
	 
